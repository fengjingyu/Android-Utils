apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.jingyu.android.test"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    /** aar */
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    /** 多渠道打包 */
    productFlavors {
        _studio {
            manifestPlaceholders = [MULTI_CHANNEL_VALUE: "_studio"]
        }
        _ali {
            manifestPlaceholders = [MULTI_CHANNEL_VALUE: "_ali"]
        }
        _tencent {
            manifestPlaceholders = [MULTI_CHANNEL_VALUE: "_tencent"]
        }
        _360 {
            manifestPlaceholders = [MULTI_CHANNEL_VALUE: "_360"]
        }
        _xiaomi {
            manifestPlaceholders = [MULTI_CHANNEL_VALUE: "_xiaomi"]
        }
        _baidu {
            manifestPlaceholders = [MULTI_CHANNEL_VALUE: "_baidu"]
        }
        _huawei {
            manifestPlaceholders = [MULTI_CHANNEL_VALUE: "_huawei"]
        }
    }

    dexOptions {
        maxProcessCount 4
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        //开发App时经常遇到Release版和Debug版共存问题，由于默认的签名不同，经常要卸载Debug版安装Release版，这里使用同一个签名
        config {
            storeFile file("test.jks")
            storePassword "123456"
            keyAlias "androidtest"
            keyPassword "123456"

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    lintOptions {
        // checkReleaseBuilds false
        // disable 'MissingTranslation' //防止在发布的时候出现因 MissingTranslation导致Build Failed!
        abortOnError false //防止因为没有国际化导致编译失败
    }

    buildTypes {
        release {
            minifyEnabled true //混淆 以及 移除没有用到的代码 和 资源文件
            shrinkResources true // 移除无用的resource文件
            zipAlignEnabled true  // zip对齐优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }

        debug {
            minifyEnabled true
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def fileName
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                //def fileName = "${variant.productFlavors[0].name}-${variant.buildType.name}-v${defaultConfig.versionName}-${releaseTime()}.apk"
                if (variant.buildType.name == "debug") {
                    fileName = "v${defaultConfig.versionName}-" + outputFile.name
                } else {
                    fileName = "v${defaultConfig.versionName}-${releaseTime()}-" + outputFile.name
                }
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+8"))
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    compile project(':init')

}
